name: Java CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    working-directory: api-template
jobs:
  tests:
    runs-on: ubuntu-latest #TODO find smaller image

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Build and test with Maven
        run: mvn clean test

      # Quality Check
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Scan with Trivy
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: ./api-template
          severity: 'CRITICAL,HIGH'
  build:
    runs-on: ubuntu-latest #TODO find smaller image
    needs: tests
    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Log in to GitHub Container Registry
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}-api

      - name: Build and push Docker front image
        uses: docker/build-push-action@v6
        with:
          context: api-template
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set up SSH
        runs-on: alpine/ansible:2.17.0
        run: |
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
            chmod 600 private_key.pem

      - name: Run Ansible Playbook
        runs-on: alpine/ansible:2.17.0
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
        run: |
          ansible-playbook ansible/deploy_playbook.yml -i ansible/inventories/app.yml -i  "{{ secrets.ANSIBLE_IP }}," -e "ansible_user=${{ secrets.ANSIBLE_USER }}" --private-key private_key.pem 
#          ansible-playbook -i inventory/hosts.ini playbooks/deploy_web_server.yml -u ${{ secrets.ANSIBLE_USER }}